<%- include('../partials/adminHeader') %>
<div class="orders-main">
  <div class="side-menu">
    <a href="/admin/">
      <li><i class="ri-dashboard-fill"></i>DashBoard</li>
    </a>
    <a href="/admin/orders">
      <li ><i class="ri-shopping-bag-fill"></i> Orders</li>
    </a>
    <a href="/admin/product">
      <li><i class="ri-smartphone-fill"></i> Products</li>
    </a>
    <a href="/admin/users">
      <li><i class="ri-user-fill"></i> Users</li>
    </a>
    <a href="/admin/category">
      <li><i class="ri-layout-grid-fill"></i> Category</li>
    </a>
    <a href="/admin/offers">
      <li><i class="ri-percent-fill"></i> Offers Banner</li>
    </a>
    <a href="/admin/banned-users">
      <li><i class="ri-indeterminate-circle-fill"></i> Banned Users</li>
    </a>
    <a href="/admin/coupons">
      <li><i class="ri-ticket-fill"></i> Coupons</li>
    </a>
    <a href="/admin/sales-report">
      <li class="selected"><i class="ri-file-chart-fill"></i> Sales Report</li>
    </a>
  </div>
  <div class="order-container">
    <div class="container-fluid filter-head pt-4">
      <h3>Filter by date</h3>
      <form action="/admin/sales-report" method="get">
        <input type="date" name="startDate" value="<%= startDate %>" onchange="this.form.submit()">
        to
        <input type="date" name="endDate" value="<%= endDate %>" onchange="this.form.submit()">
      </form>
    </div>
    <div class="report-btns container-fluid">
      <h3 >Sales Report</h3>
      <div>
        <button onclick="downloadExcel()" class="btn btn-outline-dark rounded-0">Download in Excel</button>
        <button onclick="downloadPdf()" class="btn btn-dark rounded-0">Download in PDF</button>
      </div>
    </div>
    <div class="row mt-2 p-3">
        <div class="orders-table">
            <table class="table table-striped">
                <thead>
                    <tr>
                      <th colspan="3" class="thead">Sales report (<%= startDate %> - <%= endDate %>)</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                        <th scope="col">Total Revenue</th>
                        <td scope="col"><%= totalRevenue %> </td>
                      </tr>
                    <tr>
                        <th scope="col">Total Orders</th>
                        <td scope="col"><%= totalOrders %> </td>
                      </tr>
                    <tr>
                        <th scope="col">Total Pending</th>
                        <td scope="col"><%= totalPending %> </td>
                      </tr>
                    <tr>
                        <th scope="col">Total Dispatch</th>
                        <td scope="col"><%= totalDispatch %> </td>
                      </tr>
                </tbody>
              </table>
        </div>
    </div>
    <h3 class="mt-3">Sales By Category</h3>
    <div class="row mt-2 p-3">
        <div class="orders-table">
            <table class="table table-striped">
                <thead>
                  <tr>
                    <th scope="col">Category</th>
                    <th scope="col">Sales</th>
                    <th scope="col">Sales Profit</th>
                </tr>
                  </thead>
                  <tbody>
                    <% categories.forEach(item=>{ %>
                      <tr>
                          <th scope="col"><%= item.category %></th>
                          <td scope="col"><%= item.count %> </td>
                          <td scope="col"><%= item.profit %> </td>
                      </tr>
                    <% }) %>
                </tbody>
              </table>
        </div>
    </div>
    <h3 class="mt-3">Sales By Brand</h3>
    <div class="row mt-2 p-3">
        <div class="orders-table">
            <table class="table table-striped">
                <thead>
                  <tr>
                    <th scope="col">Brand</th>
                    <th scope="col">Sales</th>
                    <th scope="col">Sales Profit</th>
                </tr>
                  </thead>
                  <tbody>
                    <% byBrand.forEach(item=>{ %>
                      <tr>
                          <th scope="col"><%= item._id %></th>
                          <td scope="col"><%= item.count %> </td>
                          <td scope="col"><%= item.profit %> </td>
                      </tr>
                    <% }) %>
                </tbody>
              </table>
        </div>
    </div>
    <h3 class="mt-3">Orders</h3>
    <div class="row mt-2 p-3">
        <div class="orders-table" id="content">
            <table class="table table-striped" id="table">
                <thead>
                    <tr>
                      <th scope="col">No</th>
                      <th scope="col">Name</th>
                      <th scope="col">date</th>
                      <th scope="col">Payment Status</th>
                      <th scope="col">Status</th>
                      <th scope="col">Quantity</th>
                      <th scope="col">Total</th>
                    </tr>
                  </thead>
                  <tbody>
                    
                    <% orders.forEach((item,index)=>{ %>

                    <tr>
                      <th scope="row">
                        <%= index+1 %> 
                       </th>
                      <th scope="row">
                        <a href="/admin/order-details/<%=item._id%>">
                          <%=item.product.name  %>
                        </a>
                       </th>
                      <td><%=item.createdAt.toLocaleDateString()  %> </td>
                      <td>
                        <% if(item.paid){ %> Paid
                        <% }else{ %> Not Paid <% } %> 
                        </td>
                      <td class="d-flex justify-content-center">
                        <div class="del-status <%= item.orderStatus  %> ">
                            <%= item.orderStatus  %> 
                        </div>
                    </td>
                      
                    <td><%=item.quantity  %> </td>
                      <td><%=item.product.price  * item.quantity  %> </td>
                    </tr>
                    <%}) %> 

                    
                  </tbody>
              </table>
        </div>
    </div>
    
  </div>
</div>



<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.1/xlsx.full.min.js"></script>
  <script>
    let orders= '<%- JSON.stringify(orderTable)%>'
    let totalDispatch= '<%= totalDispatch%>'
    let totalOrders= '<%= totalOrders%>'
    let totalRevenue= '<%= totalRevenue%>'
    let totalPending= '<%= totalPending%>'
    let startDate= '<%= startDate%>'
    let endDate= '<%= endDate%>'
    let categories= '<%- JSON.stringify(categories)%>'
    let brands= '<%- JSON.stringify(byBrand)%>'
    
    orders=JSON.parse(orders);
    categories=JSON.parse(categories);
    brands=JSON.parse(brands);
    console.log(orders)
    categoryBody= categories.map(item=>{
      return [item.category, item.count, item.profit]
    })
    brandXLSX=[]
    brandBody= brands.map(item=>{
      brandXLSX.push({brand:item._id, sales:item.count, profit:item.profit})
      return [item._id, item.count, item.profit]
    })

    const { jsPDF } = window.jspdf;
    function downloadPdf() {
      const doc= new jsPDF();
      let salesReportHead='('+startDate+" - "+endDate+")"
      doc.text(15, 20, "Cart Genie Sales Report ");
      doc.text(15, 30, salesReportHead);
      doc.autoTable({
        head: [['Type', 'Details']],
        body: [
              ['Total Orders', totalOrders],
              ['Total Revenue', totalRevenue],
              ['Total Pending', totalPending],
              ['Total Dispatch', totalDispatch],
              ],
        startY: 40
      })
      doc.text(15, doc.lastAutoTable.finalY+20, "sales By Category");
      doc.autoTable({
        head: [['Category', 'Sales Count', "sales profit"]],
        body: categoryBody,
        startY: doc.lastAutoTable.finalY + 30
      })

      doc.text(15, doc.lastAutoTable.finalY+20, "sales By Brand");
      doc.autoTable({
        head: [['Brand', 'Sales Count', 'sales profit']],
        body: brandBody,
        startY: doc.lastAutoTable.finalY + 30
      })

      doc.save('sales-report('+startDate+' - '+endDate+').pdf');
    }
    console.log(categories)
    console.log(brandXLSX)
    function downloadExcel(){
      let report=[
        {type:"Total Revenue", value:totalRevenue},
        {type:"Total Orders", value:totalOrders},
        {type:"Total Pending", value:totalPending},
        {type:"Total Dispatch", value:totalDispatch},
      ]

        var sheet1 = XLSX.utils.json_to_sheet(report);
        var wb = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(wb, sheet1, "Sales Report");

        var sheet2 = XLSX.utils.json_to_sheet(brandXLSX);
        XLSX.utils.book_append_sheet(wb, sheet2, "Brands");
        
        var sheet3 = XLSX.utils.json_to_sheet(categories);
        XLSX.utils.book_append_sheet(wb, sheet3, "Categories");

        XLSX.writeFile(wb,'sales-report.xlsx');
    }
  </script>